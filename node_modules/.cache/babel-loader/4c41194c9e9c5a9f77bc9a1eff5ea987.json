{"ast":null,"code":"import _asyncToGenerator from\"D:/CURSO JS/REACT/instagram/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/CURSO JS/REACT/instagram/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";/* eslint-disable no-unused-vars */ /* eslint-disable react/prop-types */import React,{useState,useContext}from\"react\";import PropTypes from\"prop-types\";import{Link}from\"react-router-dom\";import{updateLoggedInUserFollowing,updateFollowedUserFollowers,getUserByUserId}from\"../../services/firebase\";import LoggedInUserContext from\"../../context/logged-in-user\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SuggestedProfile(_ref){var profileDocId=_ref.profileDocId,username=_ref.username,profileId=_ref.profileId,userId=_ref.userId,loggedInUserDocId=_ref.loggedInUserDocId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),followed=_useState2[0],setFollowed=_useState2[1];var _useContext=useContext(LoggedInUserContext),setActiveUser=_useContext.setActiveUser;function handleFollowedUser(){return _handleFollowedUser.apply(this,arguments);}function _handleFollowedUser(){_handleFollowedUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$getUserByUserI,_yield$getUserByUserI2,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setFollowed(true);// firebase: create 2 services (functions)\n// update the following array of the logged in user(in this case, my profile)\n_context.next=3;return updateLoggedInUserFollowing(loggedInUserDocId,profileId,false);case 3:_context.next=5;return updateFollowedUserFollowers(profileDocId,userId,false);case 5:_context.next=7;return getUserByUserId(userId);case 7:_yield$getUserByUserI=_context.sent;_yield$getUserByUserI2=_slicedToArray(_yield$getUserByUserI,1);user=_yield$getUserByUserI2[0];setActiveUser(user);case 11:case\"end\":return _context.stop();}}},_callee);}));return _handleFollowedUser.apply(this,arguments);}return!followed?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row items-center align-items justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"rounded-full w-8 flex mr-3\",src:\"/images/avatars/\".concat(username,\".jpg\"),alt:\"\",onError:function onError(e){e.target.src=\"/images/avatars/default.png\";}}),/*#__PURE__*/_jsx(Link,{to:\"/p/\".concat(username),children:/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-sm\",children:username})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"text-xs font-semibold text-blue-medium\",type:\"button\",onClick:handleFollowedUser,children:\"Follow\"})]}):null;}SuggestedProfile.prototypes={profileDocId:PropTypes.string.isRequired,username:PropTypes.string.isRequired,profileId:PropTypes.string.isRequired,userId:PropTypes.string.isRequired,loggedInUserDocId:PropTypes.string.isRequired};","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/sidebar/suggested-profile.js"],"names":["React","useState","useContext","PropTypes","Link","updateLoggedInUserFollowing","updateFollowedUserFollowers","getUserByUserId","LoggedInUserContext","SuggestedProfile","profileDocId","username","profileId","userId","loggedInUserDocId","followed","setFollowed","setActiveUser","handleFollowedUser","user","e","target","src","prototypes","string","isRequired"],"mappings":"8VAAA,mC,CACA,qCAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OACEC,2BADF,CAEEC,2BAFF,CAGEC,eAHF,KAIO,yBAJP,CAKA,MAAOC,CAAAA,mBAAP,KAAgC,8BAAhC,C,wFAEA,cAAe,SAASC,CAAAA,gBAAT,MAMZ,IALDC,CAAAA,YAKC,MALDA,YAKC,CAJDC,QAIC,MAJDA,QAIC,CAHDC,SAGC,MAHDA,SAGC,CAFDC,MAEC,MAFDA,MAEC,CADDC,iBACC,MADDA,iBACC,CACD,cAAgCb,QAAQ,CAAC,KAAD,CAAxC,wCAAOc,QAAP,eAAiBC,WAAjB,eACA,gBAA0Bd,UAAU,CAACM,mBAAD,CAApC,CAAQS,aAAR,aAAQA,aAAR,CAFC,QAIcC,CAAAA,kBAJd,gKAID,yLACEF,WAAW,CAAC,IAAD,CAAX,CACA;AACA;AAHF,sBAIQX,CAAAA,2BAA2B,CAACS,iBAAD,CAAoBF,SAApB,CAA+B,KAA/B,CAJnC,8BAMQN,CAAAA,2BAA2B,CAACI,YAAD,CAAeG,MAAf,CAAuB,KAAvB,CANnC,8BAOuBN,CAAAA,eAAe,CAACM,MAAD,CAPtC,2GAOSM,IAPT,2BAQEF,aAAa,CAACE,IAAD,CAAb,CARF,uDAJC,qDAcD,MAAO,CAACJ,QAAD,cACL,aAAK,SAAS,CAAC,wDAAf,wBACE,aAAK,SAAS,CAAC,mCAAf,wBACE,YACE,SAAS,CAAC,4BADZ,CAEE,GAAG,2BAAqBJ,QAArB,QAFL,CAGE,GAAG,CAAC,EAHN,CAIE,OAAO,CAAE,iBAACS,CAAD,CAAO,CACdA,CAAC,CAACC,MAAF,CAASC,GAAT,+BACD,CANH,EADF,cASE,KAAC,IAAD,EAAM,EAAE,cAAQX,QAAR,CAAR,uBACE,UAAG,SAAS,CAAC,uBAAb,UAAsCA,QAAtC,EADF,EATF,GADF,cAcE,eACE,SAAS,CAAC,wCADZ,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAEO,kBAHX,oBAdF,GADK,CAuBH,IAvBJ,CAwBD,CACDT,gBAAgB,CAACc,UAAjB,CAA8B,CAC5Bb,YAAY,CAAEP,SAAS,CAACqB,MAAV,CAAiBC,UADH,CAE5Bd,QAAQ,CAAER,SAAS,CAACqB,MAAV,CAAiBC,UAFC,CAG5Bb,SAAS,CAAET,SAAS,CAACqB,MAAV,CAAiBC,UAHA,CAI5BZ,MAAM,CAAEV,SAAS,CAACqB,MAAV,CAAiBC,UAJG,CAK5BX,iBAAiB,CAAEX,SAAS,CAACqB,MAAV,CAAiBC,UALR,CAA9B","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  updateLoggedInUserFollowing,\r\n  updateFollowedUserFollowers,\r\n  getUserByUserId,\r\n} from \"../../services/firebase\";\r\nimport LoggedInUserContext from \"../../context/logged-in-user\";\r\n\r\nexport default function SuggestedProfile({\r\n  profileDocId,\r\n  username,\r\n  profileId,\r\n  userId,\r\n  loggedInUserDocId,\r\n}) {\r\n  const [followed, setFollowed] = useState(false);\r\n  const { setActiveUser } = useContext(LoggedInUserContext);\r\n\r\n  async function handleFollowedUser() {\r\n    setFollowed(true);\r\n    // firebase: create 2 services (functions)\r\n    // update the following array of the logged in user(in this case, my profile)\r\n    await updateLoggedInUserFollowing(loggedInUserDocId, profileId, false);\r\n    // update the followers array of the user who has been foollwed\r\n    await updateFollowedUserFollowers(profileDocId, userId, false);\r\n    const [user] = await getUserByUserId(userId);\r\n    setActiveUser(user);\r\n  }\r\n  return !followed ? (\r\n    <div className=\"flex flex-row items-center align-items justify-between\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <img\r\n          className=\"rounded-full w-8 flex mr-3\"\r\n          src={`/images/avatars/${username}.jpg`}\r\n          alt=\"\"\r\n          onError={(e) => {\r\n            e.target.src = `/images/avatars/default.png`;\r\n          }}\r\n        />\r\n        <Link to={`/p/${username}`}>\r\n          <p className=\"font-semibold text-sm\">{username}</p>\r\n        </Link>\r\n      </div>\r\n      <button\r\n        className=\"text-xs font-semibold text-blue-medium\"\r\n        type=\"button\"\r\n        onClick={handleFollowedUser}\r\n      >\r\n        Follow\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\nSuggestedProfile.prototypes = {\r\n  profileDocId: PropTypes.string.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  profileId: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  loggedInUserDocId: PropTypes.string.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}