{"ast":null,"code":"var _jsxFileName = \"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\src\\\\components\\\\profile\\\\header.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/forbid-prop-types */\n\n/* eslint-disable jsx-a11y/img-redundant-alt */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Skeleton from \"react-loading-skeleton\";\nimport useUser from \"../../hooks/use-user\";\nimport { isUserFollowingProfile, toggleFollow } from \"../../services/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(_ref) {\n  _s();\n\n  let {\n    photosCount,\n    followerCount,\n    setFollowerCount,\n    profile: {\n      docId: profileDocId,\n      userId: profileUserId,\n      fullName,\n      following = [],\n      username: profileUsername\n    }\n  } = _ref;\n  const {\n    user\n  } = useUser();\n  const [isFollowingProfile, setIsFollowingProfile] = useState(false);\n  const activeBtnFollow = (user === null || user === void 0 ? void 0 : user.username) && (user === null || user === void 0 ? void 0 : user.username) !== profileUsername;\n\n  const handleToggleFollow = async () => {\n    setIsFollowingProfile(isFollowingProfile => !isFollowingProfile);\n    setFollowerCount({\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1\n    });\n    await toggleFollow(isFollowingProfile, user.docId, profileDocId, profileUserId, user.userId);\n  };\n\n  useEffect(() => {\n    const isLoggedInUserFollowingProfile = async () => {\n      const isFollowing = await isUserFollowingProfile(user.username, profileUserId);\n      setIsFollowingProfile(isFollowing);\n    };\n\n    if (user.username && profileUserId) {\n      isLoggedInUserFollowingProfile();\n    }\n  }, [user.username, profileUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container flex justify-center\",\n      children: user.username && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"rounded-full h-24 w-24 md:h-40 md:w-40 flex border-4 border-red-primary p-1\",\n        alt: `${user.username} profile picture`,\n        src: `/images/avatars/${profileUsername}.jpg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center flex-col col-span-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl mr-4\",\n          children: profileUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-semibold mr-4\",\n          children: fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), activeBtnFollow && isFollowingProfile === null ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          count: 1,\n          width: 80,\n          height: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : activeBtnFollow && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\",\n          type: \"button\",\n          onClick: handleToggleFollow,\n          onKeyDown: event => {\n            if (event.key === \"Enter\") {\n              handleToggleFollow();\n            }\n          },\n          children: isFollowingProfile ? \"Unfollow\" : \"Follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"eLBYrefxMNatgY67ytQhoIphM/w=\", false, function () {\n  return [useUser];\n});\n\n_c = Header;\nHeader.propTypes = {\n  photosCount: PropTypes.number.isRequired,\n  followerCount: PropTypes.number.isRequired,\n  setFollowerCount: PropTypes.number.isRequired,\n  profile: PropTypes.shape({\n    docId: PropTypes.string,\n    userId: PropTypes.string,\n    following: PropTypes.string,\n    fullName: PropTypes.string,\n    username: PropTypes.array\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/profile/header.js"],"names":["React","useEffect","useState","PropTypes","Skeleton","useUser","isUserFollowingProfile","toggleFollow","Header","photosCount","followerCount","setFollowerCount","profile","docId","profileDocId","userId","profileUserId","fullName","following","username","profileUsername","user","isFollowingProfile","setIsFollowingProfile","activeBtnFollow","handleToggleFollow","isLoggedInUserFollowingProfile","isFollowing","event","key","propTypes","number","isRequired","shape","string","array"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useUser from \"../../hooks/use-user\";\r\nimport { isUserFollowingProfile, toggleFollow } from \"../../services/firebase\";\r\n\r\nexport default function Header({\r\n  photosCount,\r\n  followerCount,\r\n  setFollowerCount,\r\n  profile: {\r\n    docId: profileDocId,\r\n    userId: profileUserId,\r\n    fullName,\r\n    following = [],\r\n    username: profileUsername,\r\n  },\r\n}) {\r\n  const { user } = useUser();\r\n  const [isFollowingProfile, setIsFollowingProfile] = useState(false);\r\n  const activeBtnFollow = user?.username && user?.username !== profileUsername;\r\n\r\n  const handleToggleFollow = async () => {\r\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\r\n    setFollowerCount({\r\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1,\r\n    });\r\n    await toggleFollow(\r\n      isFollowingProfile,\r\n      user.docId,\r\n      profileDocId,\r\n      profileUserId,\r\n      user.userId\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isLoggedInUserFollowingProfile = async () => {\r\n      const isFollowing = await isUserFollowingProfile(\r\n        user.username,\r\n        profileUserId\r\n      );\r\n      setIsFollowingProfile(isFollowing);\r\n    };\r\n    if (user.username && profileUserId) {\r\n      isLoggedInUserFollowingProfile();\r\n    }\r\n  }, [user.username, profileUserId]);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\r\n      <div className=\"container flex justify-center\">\r\n        {user.username && (\r\n          <img\r\n            className=\"rounded-full h-24 w-24 md:h-40 md:w-40 flex border-4 border-red-primary p-1\"\r\n            alt={`${user.username} profile picture`}\r\n            src={`/images/avatars/${profileUsername}.jpg`}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"flex items-center justify-center flex-col col-span-2\">\r\n        <div className=\"container flex items-center\">\r\n          <p className=\"text-xl mr-4\">{profileUsername}</p>\r\n        </div>\r\n        <div className=\"container flex items-center\">\r\n          <p className=\"text-lg font-semibold mr-4\">{fullName}</p>\r\n          {activeBtnFollow && isFollowingProfile === null ? (\r\n            <Skeleton count={1} width={80} height={32} />\r\n          ) : (\r\n            activeBtnFollow && (\r\n              <button\r\n                className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\r\n                type=\"button\"\r\n                onClick={handleToggleFollow}\r\n                onKeyDown={(event) => {\r\n                  if (event.key === \"Enter\") {\r\n                    handleToggleFollow();\r\n                  }\r\n                }}\r\n              >\r\n                {isFollowingProfile ? \"Unfollow\" : \"Follow\"}\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nHeader.propTypes = {\r\n  photosCount: PropTypes.number.isRequired,\r\n  followerCount: PropTypes.number.isRequired,\r\n  setFollowerCount: PropTypes.number.isRequired,\r\n  profile: PropTypes.shape({\r\n    docId: PropTypes.string,\r\n    userId: PropTypes.string,\r\n    following: PropTypes.string,\r\n    fullName: PropTypes.string,\r\n    username: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}