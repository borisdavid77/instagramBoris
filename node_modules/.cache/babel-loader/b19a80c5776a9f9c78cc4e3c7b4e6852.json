{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport { useState, useEffect, useContext } from \"react\";\nimport FirebaseContext from \"../context/firebase\"; // import { firebase } from \"../lib/firebase\";\n\nexport default function useAuthListener() {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useState(JSON.parse(localStorage.getItem(\"authUser\")));\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(authUser => {\n      // we have user\n      if (authUser) {\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        // we don't have an autUser, therefore clear the localStorage\n        localStorage.removeItem(\"authUser\");\n        setUser(null);\n      }\n    });\n    return () => listener();\n  }, [firebase]);\n  return {\n    user\n  };\n}\n\n_s(useAuthListener, \"+aOwsKIcffdrNFBEgQ6o6Iu3yuQ=\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","user","setUser","JSON","parse","localStorage","getItem","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";;AAAA;;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,eAAP,MAA4B,qBAA5B,C,CACA;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,QAAQ,CAChCO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADgC,CAAlC;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACC,eAAD,CAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAoCC,QAAD,IAAc;AAChE;AACA,UAAIA,QAAJ,EAAc;AACZN,QAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAeF,QAAf,CAAjC;AACAT,QAAAA,OAAO,CAACS,QAAD,CAAP;AACD,OAHD,MAGO;AACL;AACAN,QAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAZ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAVgB,CAAjB;AAWA,WAAO,MAAMM,QAAQ,EAArB;AACD,GAbQ,EAaN,CAACD,QAAD,CAbM,CAAT;AAeA,SAAO;AAAEN,IAAAA;AAAF,GAAP;AACD;;GAvBuBD,e","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport FirebaseContext from \"../context/firebase\";\r\n// import { firebase } from \"../lib/firebase\";\r\n\r\nexport default function useAuthListener() {\r\n  const { user, setUser } = useState(\r\n    JSON.parse(localStorage.getItem(\"authUser\"))\r\n  );\r\n\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      // we have user\r\n      if (authUser) {\r\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        // we don't have an autUser, therefore clear the localStorage\r\n        localStorage.removeItem(\"authUser\");\r\n        setUser(null);\r\n      }\r\n    });\r\n    return () => listener();\r\n  }, [firebase]);\r\n\r\n  return { user };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}