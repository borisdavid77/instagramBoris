{"ast":null,"code":"/* eslint-disable react/jsx-no-constructed-context-values */ /* eslint-disable react-hooks/rules-of-hooks */ /* eslint-disable no-unused-vars */import React,{lazy,Suspense}from\"react\";import{Routes,BrowserRouter,Route}from\"react-router-dom\";import*as ROUTES from\"./constants/routes\";import UserContext from\"./context/user\";import useAuthListener from\"./hooks/use-auth-listener\";import Spinner from\"./constants/spinner\";import ProtectedRoute from\"./helpers/protected-route\";import IsUserLogged from\"./helpers/is-user-logged\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=/*#__PURE__*/lazy(function(){return import(\"./pages/login\");});var SignUp=/*#__PURE__*/lazy(function(){return import(\"./pages/sign-up\");});var NotFound=/*#__PURE__*/lazy(function(){return import(\"./pages/not-found\");});var Dashboard=/*#__PURE__*/lazy(function(){return import(\"./pages/dashboard\");});var Profile=/*#__PURE__*/lazy(function(){return import(\"./pages/profile\");});export default function App(){var _useAuthListener=useAuthListener(),user=_useAuthListener.user;return/*#__PURE__*/_jsx(UserContext.Provider,{value:{user:user},children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Spinner,{}),children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{}),children:/*#__PURE__*/_jsx(Route,{path:ROUTES.DASHBOARD,element:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsx(Route,{element:/*#__PURE__*/_jsx(IsUserLogged,{}),children:/*#__PURE__*/_jsx(Route,{path:ROUTES.LOGIN,element:/*#__PURE__*/_jsx(Login,{})})}),/*#__PURE__*/_jsx(Route,{element:/*#__PURE__*/_jsx(IsUserLogged,{}),children:/*#__PURE__*/_jsx(Route,{path:ROUTES.SIGN_UP,element:/*#__PURE__*/_jsx(SignUp,{})})}),/*#__PURE__*/_jsx(Route,{path:ROUTES.PROFILE,element:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})})]})})})});}","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/App.js"],"names":["React","lazy","Suspense","Routes","BrowserRouter","Route","ROUTES","UserContext","useAuthListener","Spinner","ProtectedRoute","IsUserLogged","Login","SignUp","NotFound","Dashboard","Profile","App","user","DASHBOARD","LOGIN","SIGN_UP","PROFILE"],"mappings":"AAAA,4D,CACA,+C,CACA,mCACA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,KAAsC,OAAtC,CACA,OAASC,MAAT,CAAiBC,aAAjB,CAAgCC,KAAhC,KAA6C,kBAA7C,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,C,wFAEA,GAAMC,CAAAA,KAAK,cAAGX,IAAI,CAAC,iBAAM,QAAO,eAAP,CAAN,EAAD,CAAlB,CACA,GAAMY,CAAAA,MAAM,cAAGZ,IAAI,CAAC,iBAAM,QAAO,iBAAP,CAAN,EAAD,CAAnB,CACA,GAAMa,CAAAA,QAAQ,cAAGb,IAAI,CAAC,iBAAM,QAAO,mBAAP,CAAN,EAAD,CAArB,CACA,GAAMc,CAAAA,SAAS,cAAGd,IAAI,CAAC,iBAAM,QAAO,mBAAP,CAAN,EAAD,CAAtB,CACA,GAAMe,CAAAA,OAAO,cAAGf,IAAI,CAAC,iBAAM,QAAO,iBAAP,CAAN,EAAD,CAApB,CAEA,cAAe,SAASgB,CAAAA,GAAT,EAAe,CAC5B,qBAAiBT,eAAe,EAAhC,CAAQU,IAAR,kBAAQA,IAAR,CACA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEA,IAAI,CAAJA,IAAF,CAA7B,uBACE,KAAC,aAAD,wBACE,KAAC,QAAD,EAAU,QAAQ,cAAE,KAAC,OAAD,IAApB,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,OAAO,cAAE,KAAC,cAAD,IAAhB,uBACE,KAAC,KAAD,EAAO,IAAI,CAAEZ,MAAM,CAACa,SAApB,CAA+B,OAAO,cAAE,KAAC,SAAD,IAAxC,EADF,EADF,cAIE,KAAC,KAAD,EAAO,OAAO,cAAE,KAAC,YAAD,IAAhB,uBACE,KAAC,KAAD,EAAO,IAAI,CAAEb,MAAM,CAACc,KAApB,CAA2B,OAAO,cAAE,KAAC,KAAD,IAApC,EADF,EAJF,cAOE,KAAC,KAAD,EAAO,OAAO,cAAE,KAAC,YAAD,IAAhB,uBACE,KAAC,KAAD,EAAO,IAAI,CAAEd,MAAM,CAACe,OAApB,CAA6B,OAAO,cAAE,KAAC,MAAD,IAAtC,EADF,EAPF,cAUE,KAAC,KAAD,EAAO,IAAI,CAAEf,MAAM,CAACgB,OAApB,CAA6B,OAAO,cAAE,KAAC,OAAD,IAAtC,EAVF,cAWE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,QAAD,IAAzB,EAXF,GADF,EADF,EADF,EADF,CAqBD","sourcesContent":["/* eslint-disable react/jsx-no-constructed-context-values */\n/* eslint-disable react-hooks/rules-of-hooks */\n/* eslint-disable no-unused-vars */\nimport React, { lazy, Suspense } from \"react\";\nimport { Routes, BrowserRouter, Route } from \"react-router-dom\";\nimport * as ROUTES from \"./constants/routes\";\nimport UserContext from \"./context/user\";\nimport useAuthListener from \"./hooks/use-auth-listener\";\nimport Spinner from \"./constants/spinner\";\nimport ProtectedRoute from \"./helpers/protected-route\";\nimport IsUserLogged from \"./helpers/is-user-logged\";\n\nconst Login = lazy(() => import(\"./pages/login\"));\nconst SignUp = lazy(() => import(\"./pages/sign-up\"));\nconst NotFound = lazy(() => import(\"./pages/not-found\"));\nconst Dashboard = lazy(() => import(\"./pages/dashboard\"));\nconst Profile = lazy(() => import(\"./pages/profile\"));\n\nexport default function App() {\n  const { user } = useAuthListener();\n  return (\n    <UserContext.Provider value={{ user }}>\n      <BrowserRouter>\n        <Suspense fallback={<Spinner />}>\n          <Routes>\n            <Route element={<ProtectedRoute />}>\n              <Route path={ROUTES.DASHBOARD} element={<Dashboard />} />\n            </Route>\n            <Route element={<IsUserLogged />}>\n              <Route path={ROUTES.LOGIN} element={<Login />} />\n            </Route>\n            <Route element={<IsUserLogged />}>\n              <Route path={ROUTES.SIGN_UP} element={<SignUp />} />\n            </Route>\n            <Route path={ROUTES.PROFILE} element={<Profile />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </Suspense>\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}