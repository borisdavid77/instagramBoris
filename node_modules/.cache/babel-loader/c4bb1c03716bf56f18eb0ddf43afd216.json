{"ast":null,"code":"var _jsxFileName = \"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\src\\\\components\\\\sidebar\\\\suggestions.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-unreachable */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { getSuggestedProfiles } from \"../../services/firebase\";\nimport SuggestedProfile from \"./services/suggested-profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Suggestions(_ref) {\n  _s();\n\n  let {\n    userId,\n    following\n  } = _ref;\n  const [profiles, setProfiles] = useState(null); // go a head and get the suggested protoFiles\n\n  useEffect(() => {\n    async function suggestedProfiles() {\n      const response = await getSuggestedProfiles(userId, following);\n      setProfiles(response);\n    }\n\n    if (userId) {\n      suggestedProfiles();\n    }\n\n    console.log(\"profiles:\", profiles);\n  }, [userId]); // hint: use the firebase service (call using userId)\n  // getSuggestedProfiles\n  // call the async function ^^^^ within useEffect\n  // store it in state\n  // go ahead and render (wait on the profiles as in 'skeleton')\n\n  return !profiles ? /*#__PURE__*/_jsxDEV(Skeleton, {\n    count: 1,\n    height: 150,\n    className: \"mt-5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : profiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm flex items-center align-items justify-between mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-gray-base\",\n        children: \"Seggestions for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 grid gap-5\",\n      children: profiles.map(user => /*#__PURE__*/_jsxDEV(SuggestedProfile, {\n        userDocId: profiles.docID,\n        username: profiles.username,\n        profileId: profiles.userId,\n        userID: userId\n      }, profiles.docID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(Suggestions, \"qxjxnT9amCcb9SFSsQkfAAyVGGQ=\");\n\n_c = Suggestions;\nSuggestions.prototypes = {\n  userId: PropTypes.string,\n  following: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/sidebar/suggestions.js"],"names":["React","useState","useEffect","PropTypes","Skeleton","getSuggestedProfiles","SuggestedProfile","Suggestions","userId","following","profiles","setProfiles","suggestedProfiles","response","console","log","length","map","user","docID","username","prototypes","string","array"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;;AAEA,eAAe,SAASC,WAAT,OAA4C;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAuB;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC,CADyD,CAGzD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,iBAAf,GAAmC;AACjC,YAAMC,QAAQ,GAAG,MAAMR,oBAAoB,CAACG,MAAD,EAASC,SAAT,CAA3C;AACAE,MAAAA,WAAW,CAACE,QAAD,CAAX;AACD;;AACD,QAAIL,MAAJ,EAAY;AACVI,MAAAA,iBAAiB;AAClB;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,QAAzB;AACD,GATQ,EASN,CAACF,MAAD,CATM,CAAT,CAJyD,CAczD;AACA;AACA;AACA;AACA;;AAEA,SAAO,CAACE,QAAD,gBACL,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAoB,IAAA,MAAM,EAAE,GAA5B;AAAiC,IAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,UADK,GAEHA,QAAQ,CAACM,MAAT,GAAkB,CAAlB,gBACF;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGN,QAAQ,CAACO,GAAT,CAAcC,IAAD,iBACZ,QAAC,gBAAD;AAEE,QAAA,SAAS,EAAER,QAAQ,CAACS,KAFtB;AAGE,QAAA,QAAQ,EAAET,QAAQ,CAACU,QAHrB;AAIE,QAAA,SAAS,EAAEV,QAAQ,CAACF,MAJtB;AAKE,QAAA,MAAM,EAAEA;AALV,SACOE,QAAQ,CAACS,KADhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,GAiBA,IAnBJ;AAoBD;;GAxCuBZ,W;;KAAAA,W;AAyCxBA,WAAW,CAACc,UAAZ,GAAyB;AACvBb,EAAAA,MAAM,EAAEL,SAAS,CAACmB,MADK;AAEvBb,EAAAA,SAAS,EAAEN,SAAS,CAACoB;AAFE,CAAzB","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-unreachable */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getSuggestedProfiles } from \"../../services/firebase\";\r\nimport SuggestedProfile from \"./services/suggested-profile\";\r\n\r\nexport default function Suggestions({ userId, following }) {\r\n  const [profiles, setProfiles] = useState(null);\r\n\r\n  // go a head and get the suggested protoFiles\r\n  useEffect(() => {\r\n    async function suggestedProfiles() {\r\n      const response = await getSuggestedProfiles(userId, following);\r\n      setProfiles(response);\r\n    }\r\n    if (userId) {\r\n      suggestedProfiles();\r\n    }\r\n    console.log(\"profiles:\", profiles);\r\n  }, [userId]);\r\n  // hint: use the firebase service (call using userId)\r\n  // getSuggestedProfiles\r\n  // call the async function ^^^^ within useEffect\r\n  // store it in state\r\n  // go ahead and render (wait on the profiles as in 'skeleton')\r\n\r\n  return !profiles ? (\r\n    <Skeleton count={1} height={150} className=\"mt-5\" />\r\n  ) : profiles.length > 0 ? (\r\n    <div className=\"rounded flex flex-col\">\r\n      <div className=\"text-sm flex items-center align-items justify-between mb-2\">\r\n        <p className=\"font-bold text-gray-base\">Seggestions for you</p>\r\n      </div>\r\n      <div className=\"mt-4 grid gap-5\">\r\n        {profiles.map((user) => (\r\n          <SuggestedProfile\r\n            key={profiles.docID}\r\n            userDocId={profiles.docID}\r\n            username={profiles.username}\r\n            profileId={profiles.userId}\r\n            userID={userId}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\nSuggestions.prototypes = {\r\n  userId: PropTypes.string,\r\n  following: PropTypes.array,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}