{"ast":null,"code":"var _jsxFileName = \"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\src\\\\components\\\\sidebar\\\\suggested-profile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { updateLoggedInUserFollowing, updateFollowedUserFollowers, getUserByUserId } from \"../../services/firebase\";\nimport LoggedInUserContext from \"../../context/logged-in-user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SuggestedProfile(_ref) {\n  _s();\n\n  let {\n    profileDocId,\n    username,\n    profileId,\n    userId,\n    loggedInUserDocId\n  } = _ref;\n  const [followed, setFollowed] = useState(false);\n  const {\n    setActiveUser\n  } = useContext(LoggedInUserContext);\n\n  async function handleFollowedUser() {\n    setFollowed(true); // firebase: create 2 services (functions)\n    // update the following array of the logged in user(in this case, my profile)\n\n    await updateLoggedInUserFollowing(loggedInUserDocId, profileId, false); // update the followers array of the user who has been foollwed\n\n    await updateFollowedUserFollowers(profileDocId, userId, false);\n    const [user] = await getUserByUserId(userId);\n    setActiveUser(user);\n  }\n\n  return !followed ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row items-center align-items justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"rounded-full w-8 flex\",\n        src: `/images/avatars/${username}.jpg`,\n        alt: \"\",\n        onError: e => {\n          e.target.src = `/images/avatars/default.png`;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/p/${username}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-sm\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"text-xs font-semibold text-blue-medium\",\n      type: \"button\",\n      onClick: handleFollowedUser,\n      children: \"Follow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(SuggestedProfile, \"3pNZ8y/BKuGeFifUZtvZNT/2oPY=\");\n\n_c = SuggestedProfile;\nSuggestedProfile.prototypes = {\n  profileDocId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  profileId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  loggedInUserDocId: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestedProfile\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/sidebar/suggested-profile.js"],"names":["React","useState","useContext","PropTypes","Link","updateLoggedInUserFollowing","updateFollowedUserFollowers","getUserByUserId","LoggedInUserContext","SuggestedProfile","profileDocId","username","profileId","userId","loggedInUserDocId","followed","setFollowed","setActiveUser","handleFollowedUser","user","e","target","src","prototypes","string","isRequired"],"mappings":";;;AAAA;;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,2BADF,EAEEC,2BAFF,EAGEC,eAHF,QAIO,yBAJP;AAKA,OAAOC,mBAAP,MAAgC,8BAAhC;;AAEA,eAAe,SAASC,gBAAT,OAMZ;AAAA;;AAAA,MANsC;AACvCC,IAAAA,YADuC;AAEvCC,IAAAA,QAFuC;AAGvCC,IAAAA,SAHuC;AAIvCC,IAAAA,MAJuC;AAKvCC,IAAAA;AALuC,GAMtC;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAoBf,UAAU,CAACM,mBAAD,CAApC;;AAEA,iBAAeU,kBAAf,GAAoC;AAClCF,IAAAA,WAAW,CAAC,IAAD,CAAX,CADkC,CAElC;AACA;;AACA,UAAMX,2BAA2B,CAACS,iBAAD,EAAoBF,SAApB,EAA+B,KAA/B,CAAjC,CAJkC,CAKlC;;AACA,UAAMN,2BAA2B,CAACI,YAAD,EAAeG,MAAf,EAAuB,KAAvB,CAAjC;AACA,UAAM,CAACM,IAAD,IAAS,MAAMZ,eAAe,CAACM,MAAD,CAApC;AACAI,IAAAA,aAAa,CAACE,IAAD,CAAb;AACD;;AACD,SAAO,CAACJ,QAAD,gBACL;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,uBADZ;AAEE,QAAA,GAAG,EAAG,mBAAkBJ,QAAS,MAFnC;AAGE,QAAA,GAAG,EAAC,EAHN;AAIE,QAAA,OAAO,EAAGS,CAAD,IAAO;AACdA,UAAAA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAgB,6BAAhB;AACD;AANH;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,MAAKX,QAAS,EAAzB;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCA;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AACE,MAAA,SAAS,EAAC,wCADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAEO,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAuBH,IAvBJ;AAwBD;;GA5CuBT,gB;;KAAAA,gB;AA6CxBA,gBAAgB,CAACc,UAAjB,GAA8B;AAC5Bb,EAAAA,YAAY,EAAEP,SAAS,CAACqB,MAAV,CAAiBC,UADH;AAE5Bd,EAAAA,QAAQ,EAAER,SAAS,CAACqB,MAAV,CAAiBC,UAFC;AAG5Bb,EAAAA,SAAS,EAAET,SAAS,CAACqB,MAAV,CAAiBC,UAHA;AAI5BZ,EAAAA,MAAM,EAAEV,SAAS,CAACqB,MAAV,CAAiBC,UAJG;AAK5BX,EAAAA,iBAAiB,EAAEX,SAAS,CAACqB,MAAV,CAAiBC;AALR,CAA9B","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  updateLoggedInUserFollowing,\r\n  updateFollowedUserFollowers,\r\n  getUserByUserId,\r\n} from \"../../services/firebase\";\r\nimport LoggedInUserContext from \"../../context/logged-in-user\";\r\n\r\nexport default function SuggestedProfile({\r\n  profileDocId,\r\n  username,\r\n  profileId,\r\n  userId,\r\n  loggedInUserDocId,\r\n}) {\r\n  const [followed, setFollowed] = useState(false);\r\n  const { setActiveUser } = useContext(LoggedInUserContext);\r\n\r\n  async function handleFollowedUser() {\r\n    setFollowed(true);\r\n    // firebase: create 2 services (functions)\r\n    // update the following array of the logged in user(in this case, my profile)\r\n    await updateLoggedInUserFollowing(loggedInUserDocId, profileId, false);\r\n    // update the followers array of the user who has been foollwed\r\n    await updateFollowedUserFollowers(profileDocId, userId, false);\r\n    const [user] = await getUserByUserId(userId);\r\n    setActiveUser(user);\r\n  }\r\n  return !followed ? (\r\n    <div className=\"flex flex-row items-center align-items justify-between\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <img\r\n          className=\"rounded-full w-8 flex\"\r\n          src={`/images/avatars/${username}.jpg`}\r\n          alt=\"\"\r\n          onError={(e) => {\r\n            e.target.src = `/images/avatars/default.png`;\r\n          }}\r\n        />\r\n        <Link to={`/p/${username}`}>\r\n          <p className=\"font-semibold text-sm\">{username}</p>\r\n        </Link>\r\n      </div>\r\n      <button\r\n        className=\"text-xs font-semibold text-blue-medium\"\r\n        type=\"button\"\r\n        onClick={handleFollowedUser}\r\n      >\r\n        Follow\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\nSuggestedProfile.prototypes = {\r\n  profileDocId: PropTypes.string.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  profileId: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  loggedInUserDocId: PropTypes.string.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}