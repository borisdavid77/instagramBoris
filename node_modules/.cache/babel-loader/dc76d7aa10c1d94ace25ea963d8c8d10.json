{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable no-unused-vars */\nimport { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FirebaseContext from \"../../context/firebase\";\nimport UserContext from \"../../context/user\";\nexport default function AddComment(_ref) {\n  _s();\n\n  let {\n    docId,\n    comments,\n    setComments,\n    commentInput\n  } = _ref;\n  const [comment, setComment] = useState(\"\");\n  const {\n    firebase,\n    FieldValue\n  } = useContext(FirebaseContext);\n  const {\n    user: {\n      displayName\n    }\n  } = useContext(UserContext);\n\n  const handleSubmitComment = e => {\n    e.preventDefault();\n    return null;\n  };\n\n  return null;\n}\n\n_s(AddComment, \"ez9czDqAYYPdQteYJa/np16dwQA=\");\n\n_c = AddComment;\nAddComment.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/post/add-comment.js"],"names":["useState","useContext","PropTypes","FirebaseContext","UserContext","AddComment","docId","comments","setComments","commentInput","comment","setComment","firebase","FieldValue","user","displayName","handleSubmitComment","e","preventDefault","propTypes","string","isRequired"],"mappings":";;AAAA;;AACA;AAEA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,eAAe,SAASC,UAAT,OAKZ;AAAA;;AAAA,MALgC;AACjCC,IAAAA,KADiC;AAEjCC,IAAAA,QAFiC;AAGjCC,IAAAA,WAHiC;AAIjCC,IAAAA;AAJiC,GAKhC;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BZ,UAAU,CAACE,eAAD,CAA3C;AACA,QAAM;AACJW,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFd,UAAU,CAACG,WAAD,CAFd;;AAIA,QAAMY,mBAAmB,GAAIC,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,WAAO,IAAP;AACD,GAHD;;AAIA,SAAO,IAAP;AACD;;GAjBuBb,U;;KAAAA,U;AAmBxBA,UAAU,CAACc,SAAX,GAAuB;AACrBb,EAAAA,KAAK,EAAEJ,SAAS,CAACkB,MAAV,CAAiBC,UADH;AAErBX,EAAAA,OAAO,EAAER,SAAS,CAACkB,MAAV,CAAiBC,UAFL;AAGrBX,EAAAA,OAAO,EAAER,SAAS,CAACkB,MAAV,CAAiBC;AAHL,CAAvB","sourcesContent":["/* eslint-disable no-shadow */\r\n/* eslint-disable no-unused-vars */\r\n\r\nimport { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FirebaseContext from \"../../context/firebase\";\r\nimport UserContext from \"../../context/user\";\r\n\r\nexport default function AddComment({\r\n  docId,\r\n  comments,\r\n  setComments,\r\n  commentInput,\r\n}) {\r\n  const [comment, setComment] = useState(\"\");\r\n  const { firebase, FieldValue } = useContext(FirebaseContext);\r\n  const {\r\n    user: { displayName },\r\n  } = useContext(UserContext);\r\n\r\n  const handleSubmitComment = (e) => {\r\n    e.preventDefault();\r\n    return null;\r\n  };\r\n  return null;\r\n}\r\n\r\nAddComment.propTypes = {\r\n  docId: PropTypes.string.isRequired,\r\n  comment: PropTypes.string.isRequired,\r\n  comment: PropTypes.string.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}