{"ast":null,"code":"var _jsxFileName = \"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\src\\\\components\\\\post\\\\comments.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/forbid-prop-types */\n\n/* eslint-disable no-unused-vars */\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n\n  let {\n    docId,\n    comments: allComments,\n    posted,\n    commentInput\n  } = _ref;\n  const [comments, setComments] = useState(allComments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 pt-1 pb-4\",\n    children: [comments.length >= 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-base mb-1 cursor-pointer\",\n      children: [\"View all \", comments.length, \" comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), comments.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      clas: true\n    }, `${item.comment}-${item.displayName}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"LZlRtg2lM50mDVof2df2hoSAhCQ=\");\n\n_c = Comments;\nComments.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  posted: PropTypes.number.isRequired,\n  commentInput: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/post/comments.js"],"names":["PropTypes","React","useState","formatDistance","Link","Comments","docId","comments","allComments","posted","commentInput","setComments","length","slice","map","item","comment","displayName","propTypes","string","isRequired","array","number"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,QAAT,OAKZ;AAAA;;AAAA,MAL8B;AAC/BC,IAAAA,KAD+B;AAE/BC,IAAAA,QAAQ,EAAEC,WAFqB;AAG/BC,IAAAA,MAH+B;AAI/BC,IAAAA;AAJ+B,GAK9B;AACD,QAAM,CAACH,QAAD,EAAWI,WAAX,IAA0BT,QAAQ,CAACM,WAAD,CAAxC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGD,QAAQ,CAACK,MAAT,IAAmB,CAAnB,iBACC;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA,8BACYL,QAAQ,CAACK,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMGL,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAA0BC,IAAD,iBACxB;AAA+C,MAAA,IAAI;AAAnD,OAAS,GAAEA,IAAI,CAACC,OAAQ,IAAGD,IAAI,CAACE,WAAY,EAA5C;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnBuBZ,Q;;KAAAA,Q;AAoBxBA,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,MAAV,CAAiBC,UADL;AAEnBb,EAAAA,QAAQ,EAAEP,SAAS,CAACqB,KAAV,CAAgBD,UAFP;AAGnBX,EAAAA,MAAM,EAAET,SAAS,CAACsB,MAAV,CAAiBF,UAHN;AAInBV,EAAAA,YAAY,EAAEV,SAAS,CAACmB,MAAV,CAAiBC;AAJZ,CAArB","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { formatDistance } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Comments({\r\n  docId,\r\n  comments: allComments,\r\n  posted,\r\n  commentInput,\r\n}) {\r\n  const [comments, setComments] = useState(allComments);\r\n  return (\r\n    <div className=\"p-4 pt-1 pb-4\">\r\n      {comments.length >= 1 && (\r\n        <p className=\"text-sm text-gray-base mb-1 cursor-pointer\">\r\n          View all {comments.length} comments\r\n        </p>\r\n      )}\r\n      {comments.slice(0, 3).map((item) => (\r\n        <p key={`${item.comment}-${item.displayName}`} clas />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nComments.propTypes = {\r\n  docId: PropTypes.string.isRequired,\r\n  comments: PropTypes.array.isRequired,\r\n  posted: PropTypes.number.isRequired,\r\n  commentInput: PropTypes.string.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}