{"ast":null,"code":"import _asyncToGenerator from\"D:/CURSO JS/REACT/instagram/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/CURSO JS/REACT/instagram/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";/* eslint-disable react-hooks/exhaustive-deps */ /* eslint-disable no-unused-expressions */ /* eslint-disable no-unreachable */ /* eslint-disable react/prop-types */ /* eslint-disable no-unused-vars */ /* eslint-disable no-nested-ternary */import React,{useState,useEffect}from\"react\";import PropTypes from\"prop-types\";import Skeleton from\"react-loading-skeleton\";import{getSuggestedProfiles}from\"../../services/firebase\";import SuggestedProfile from\"./suggested-profile\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Suggestions(_ref){var userId=_ref.userId,following=_ref.following,loggedInUserDocId=_ref.loggedInUserDocId;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),profiles=_useState2[0],setProfiles=_useState2[1];// go a head and get the suggested protoFiles\nuseEffect(function(){function suggestedProfiles(){return _suggestedProfiles.apply(this,arguments);}function _suggestedProfiles(){_suggestedProfiles=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getSuggestedProfiles(userId,following);case 2:response=_context.sent;setProfiles(response);case 4:case\"end\":return _context.stop();}}},_callee);}));return _suggestedProfiles.apply(this,arguments);}if(userId){suggestedProfiles();}},[userId]);// hint: use the firebase service (call using userId)\n// getSuggestedProfiles\n// call the async function ^^^^ within useEffect\n// store it in state\n// go ahead and render (wait on the profiles as in 'skeleton')\nreturn!profiles?/*#__PURE__*/_jsx(Skeleton,{count:1,height:150,className:\"mt-5\"}):profiles.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"rounded flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm flex items-center align-items justify-between mb-1\",children:/*#__PURE__*/_jsx(\"p\",{className:\"font-bold text-gray-base\",children:\"Seggestions for you\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 grid gap-5\",children:profiles.map(function(profile){return/*#__PURE__*/_jsx(SuggestedProfile,{profileDocId:profile.docId,username:profile.username,profileId:profile.userId,userId:userId,loggedInUserDocId:loggedInUserDocId},profile.docId);})})]}):null;}Suggestions.prototypes={userId:PropTypes.string,following:PropTypes.array,loggedInUserDocId:PropTypes.string};","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/sidebar/suggestions.js"],"names":["React","useState","useEffect","PropTypes","Skeleton","getSuggestedProfiles","SuggestedProfile","Suggestions","userId","following","loggedInUserDocId","profiles","setProfiles","suggestedProfiles","response","length","map","profile","docId","username","prototypes","string","array"],"mappings":"8VAAA,gD,CACA,0C,CACA,mC,CACA,qC,CACA,mC,CACA,sCACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,oBAAT,KAAqC,yBAArC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,MAA+D,IAAxCC,CAAAA,MAAwC,MAAxCA,MAAwC,CAAhCC,SAAgC,MAAhCA,SAAgC,CAArBC,iBAAqB,MAArBA,iBAAqB,CAC5E,cAAgCT,QAAQ,CAAC,IAAD,CAAxC,wCAAOU,QAAP,eAAiBC,WAAjB,eAEA;AACAV,SAAS,CAAC,UAAM,SACCW,CAAAA,iBADD,6JACd,sKACyBR,CAAAA,oBAAoB,CAACG,MAAD,CAASC,SAAT,CAD7C,QACQK,QADR,eAEEF,WAAW,CAACE,QAAD,CAAX,CAFF,sDADc,oDAKd,GAAIN,MAAJ,CAAY,CACVK,iBAAiB,GAClB,CACF,CARQ,CAQN,CAACL,MAAD,CARM,CAAT,CASA;AACA;AACA;AACA;AACA;AAEA,MAAO,CAACG,QAAD,cACL,KAAC,QAAD,EAAU,KAAK,CAAE,CAAjB,CAAoB,MAAM,CAAE,GAA5B,CAAiC,SAAS,CAAC,MAA3C,EADK,CAEHA,QAAQ,CAACI,MAAT,CAAkB,CAAlB,cACF,aAAK,SAAS,CAAC,uBAAf,wBACE,YAAK,SAAS,CAAC,4DAAf,uBACE,UAAG,SAAS,CAAC,0BAAb,iCADF,EADF,cAIE,YAAK,SAAS,CAAC,iBAAf,UACGJ,QAAQ,CAACK,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,gBAAD,EAEE,YAAY,CAAEA,OAAO,CAACC,KAFxB,CAGE,QAAQ,CAAED,OAAO,CAACE,QAHpB,CAIE,SAAS,CAAEF,OAAO,CAACT,MAJrB,CAKE,MAAM,CAAEA,MALV,CAME,iBAAiB,CAAEE,iBANrB,EACOO,OAAO,CAACC,KADf,CADY,EAAb,CADH,EAJF,GADE,CAkBA,IApBJ,CAqBD,CACDX,WAAW,CAACa,UAAZ,CAAyB,CACvBZ,MAAM,CAAEL,SAAS,CAACkB,MADK,CAEvBZ,SAAS,CAAEN,SAAS,CAACmB,KAFE,CAGvBZ,iBAAiB,CAAEP,SAAS,CAACkB,MAHN,CAAzB","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-unreachable */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getSuggestedProfiles } from \"../../services/firebase\";\r\nimport SuggestedProfile from \"./suggested-profile\";\r\n\r\nexport default function Suggestions({ userId, following, loggedInUserDocId }) {\r\n  const [profiles, setProfiles] = useState(null);\r\n\r\n  // go a head and get the suggested protoFiles\r\n  useEffect(() => {\r\n    async function suggestedProfiles() {\r\n      const response = await getSuggestedProfiles(userId, following);\r\n      setProfiles(response);\r\n    }\r\n    if (userId) {\r\n      suggestedProfiles();\r\n    }\r\n  }, [userId]);\r\n  // hint: use the firebase service (call using userId)\r\n  // getSuggestedProfiles\r\n  // call the async function ^^^^ within useEffect\r\n  // store it in state\r\n  // go ahead and render (wait on the profiles as in 'skeleton')\r\n\r\n  return !profiles ? (\r\n    <Skeleton count={1} height={150} className=\"mt-5\" />\r\n  ) : profiles.length > 0 ? (\r\n    <div className=\"rounded flex flex-col\">\r\n      <div className=\"text-sm flex items-center align-items justify-between mb-1\">\r\n        <p className=\"font-bold text-gray-base\">Seggestions for you</p>\r\n      </div>\r\n      <div className=\"mt-4 grid gap-5\">\r\n        {profiles.map((profile) => (\r\n          <SuggestedProfile\r\n            key={profile.docId}\r\n            profileDocId={profile.docId}\r\n            username={profile.username}\r\n            profileId={profile.userId}\r\n            userId={userId}\r\n            loggedInUserDocId={loggedInUserDocId}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\nSuggestions.prototypes = {\r\n  userId: PropTypes.string,\r\n  following: PropTypes.array,\r\n  loggedInUserDocId: PropTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}