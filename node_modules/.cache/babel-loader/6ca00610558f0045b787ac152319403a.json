{"ast":null,"code":"var _jsxFileName = \"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\src\\\\components\\\\profile\\\\header.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable react/forbid-prop-types */\n\n/* eslint-disable jsx-a11y/img-redundant-alt */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Skeleton from \"react-loading-skeleton\";\nimport useUser from \"../../hooks/use-user\";\nimport { isUserFollowingProfile, toggleFollow } from \"../../services/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(_ref) {\n  _s();\n\n  let {\n    photosCount,\n    followerCount,\n    setFollowerCount,\n    profile: {\n      docId: profileDocId,\n      userId: profileUserId,\n      fullName,\n      following = [],\n      followers = [],\n      username: profileUsername\n    }\n  } = _ref;\n  const {\n    user\n  } = useUser();\n  const [isFollowingProfile, setIsFollowingProfile] = useState(null);\n  const activeBtnFollow = (user === null || user === void 0 ? void 0 : user.username) && (user === null || user === void 0 ? void 0 : user.username) !== profileUsername;\n\n  const handleToggleFollow = async () => {\n    setIsFollowingProfile(isFollowingProfile => !isFollowingProfile);\n    console.log(\"isFollowingProfile\", isFollowingProfile);\n    setFollowerCount({\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1\n    });\n    await toggleFollow(isFollowingProfile, user.docId, profileDocId, profileUserId, user.userId);\n  };\n\n  useEffect(() => {\n    const isLoggedInUserFollowingProfile = async () => {\n      const isFollowing = await isUserFollowingProfile(user.username, profileUserId);\n      setIsFollowingProfile(isFollowing);\n    };\n\n    if (user.username && profileUserId) {\n      isLoggedInUserFollowingProfile();\n    }\n  }, [user.username, profileUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex justify-center pr-16\",\n        children: user.username && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rounded-full h-24 w-24 md:h-40 md:w-40 flex border-4 border-red-primary p-1\",\n          alt: `${profileUsername} profile picture`,\n          src: `/images/avatars/${profileUsername}.jpg`,\n          onError: e => {\n            e.target.src = `/images/avatars/default.png`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"8PaDowJY6e9itLleLR23SkQBxdQ=\", false, function () {\n  return [useUser];\n});\n\n_c = Header;\nHeader.propTypes = {\n  photosCount: PropTypes.number.isRequired,\n  followerCount: PropTypes.number.isRequired,\n  setFollowerCount: PropTypes.number.isRequired,\n  profile: PropTypes.shape({\n    docId: PropTypes.string,\n    userId: PropTypes.string,\n    following: PropTypes.array,\n    followers: PropTypes.array,\n    fullName: PropTypes.string,\n    username: PropTypes.array\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/profile/header.js"],"names":["React","useEffect","useState","PropTypes","Skeleton","useUser","isUserFollowingProfile","toggleFollow","Header","photosCount","followerCount","setFollowerCount","profile","docId","profileDocId","userId","profileUserId","fullName","following","followers","username","profileUsername","user","isFollowingProfile","setIsFollowingProfile","activeBtnFollow","handleToggleFollow","console","log","isLoggedInUserFollowingProfile","isFollowing","e","target","src","propTypes","number","isRequired","shape","string","array"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,sBAAT,EAAiCC,YAAjC,QAAqD,yBAArD;;AAEA,eAAe,SAASC,MAAT,OAYZ;AAAA;;AAAA,MAZ4B;AAC7BC,IAAAA,WAD6B;AAE7BC,IAAAA,aAF6B;AAG7BC,IAAAA,gBAH6B;AAI7BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEC,YADA;AAEPC,MAAAA,MAAM,EAAEC,aAFD;AAGPC,MAAAA,QAHO;AAIPC,MAAAA,SAAS,GAAG,EAJL;AAKPC,MAAAA,SAAS,GAAG,EALL;AAMPC,MAAAA,QAAQ,EAAEC;AANH;AAJoB,GAY5B;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAWjB,OAAO,EAAxB;AACA,QAAM,CAACkB,kBAAD,EAAqBC,qBAArB,IAA8CtB,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAMuB,eAAe,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEF,QAAN,KAAkB,CAAAE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEF,QAAN,MAAmBC,eAA7D;;AAEA,QAAMK,kBAAkB,GAAG,YAAY;AACrCF,IAAAA,qBAAqB,CAAED,kBAAD,IAAwB,CAACA,kBAA1B,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,kBAAlC;AACAZ,IAAAA,gBAAgB,CAAC;AACfD,MAAAA,aAAa,EAAEa,kBAAkB,GAAGb,aAAa,GAAG,CAAnB,GAAuBA,aAAa,GAAG;AADzD,KAAD,CAAhB;AAGA,UAAMH,YAAY,CAChBgB,kBADgB,EAEhBD,IAAI,CAACT,KAFW,EAGhBC,YAHgB,EAIhBE,aAJgB,EAKhBM,IAAI,CAACP,MALW,CAAlB;AAOD,GAbD;;AAeAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4B,8BAA8B,GAAG,YAAY;AACjD,YAAMC,WAAW,GAAG,MAAMxB,sBAAsB,CAC9CgB,IAAI,CAACF,QADyC,EAE9CJ,aAF8C,CAAhD;AAIAQ,MAAAA,qBAAqB,CAACM,WAAD,CAArB;AACD,KAND;;AAOA,QAAIR,IAAI,CAACF,QAAL,IAAiBJ,aAArB,EAAoC;AAClCa,MAAAA,8BAA8B;AAC/B;AACF,GAXQ,EAWN,CAACP,IAAI,CAACF,QAAN,EAAgBJ,aAAhB,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gEAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,kBACGM,IAAI,CAACF,QAAL,iBACC;AACE,UAAA,SAAS,EAAC,6EADZ;AAEE,UAAA,GAAG,EAAG,GAAEC,eAAgB,kBAF1B;AAGE,UAAA,GAAG,EAAG,mBAAkBA,eAAgB,MAH1C;AAIE,UAAA,OAAO,EAAGU,CAAD,IAAO;AACdA,YAAAA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAgB,6BAAhB;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA/DuBzB,M;UAaLH,O;;;KAbKG,M;AAgExBA,MAAM,CAAC0B,SAAP,GAAmB;AACjBzB,EAAAA,WAAW,EAAEN,SAAS,CAACgC,MAAV,CAAiBC,UADb;AAEjB1B,EAAAA,aAAa,EAAEP,SAAS,CAACgC,MAAV,CAAiBC,UAFf;AAGjBzB,EAAAA,gBAAgB,EAAER,SAAS,CAACgC,MAAV,CAAiBC,UAHlB;AAIjBxB,EAAAA,OAAO,EAAET,SAAS,CAACkC,KAAV,CAAgB;AACvBxB,IAAAA,KAAK,EAAEV,SAAS,CAACmC,MADM;AAEvBvB,IAAAA,MAAM,EAAEZ,SAAS,CAACmC,MAFK;AAGvBpB,IAAAA,SAAS,EAAEf,SAAS,CAACoC,KAHE;AAIvBpB,IAAAA,SAAS,EAAEhB,SAAS,CAACoC,KAJE;AAKvBtB,IAAAA,QAAQ,EAAEd,SAAS,CAACmC,MALG;AAMvBlB,IAAAA,QAAQ,EAAEjB,SAAS,CAACoC;AANG,GAAhB,EAONH;AAXc,CAAnB","sourcesContent":["/* eslint-disable no-shadow */\r\n/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useUser from \"../../hooks/use-user\";\r\nimport { isUserFollowingProfile, toggleFollow } from \"../../services/firebase\";\r\n\r\nexport default function Header({\r\n  photosCount,\r\n  followerCount,\r\n  setFollowerCount,\r\n  profile: {\r\n    docId: profileDocId,\r\n    userId: profileUserId,\r\n    fullName,\r\n    following = [],\r\n    followers = [],\r\n    username: profileUsername,\r\n  },\r\n}) {\r\n  const { user } = useUser();\r\n  const [isFollowingProfile, setIsFollowingProfile] = useState(null);\r\n  const activeBtnFollow = user?.username && user?.username !== profileUsername;\r\n\r\n  const handleToggleFollow = async () => {\r\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\r\n    console.log(\"isFollowingProfile\", isFollowingProfile);\r\n    setFollowerCount({\r\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1,\r\n    });\r\n    await toggleFollow(\r\n      isFollowingProfile,\r\n      user.docId,\r\n      profileDocId,\r\n      profileUserId,\r\n      user.userId\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isLoggedInUserFollowingProfile = async () => {\r\n      const isFollowing = await isUserFollowingProfile(\r\n        user.username,\r\n        profileUserId\r\n      );\r\n      setIsFollowingProfile(isFollowing);\r\n    };\r\n    if (user.username && profileUserId) {\r\n      isLoggedInUserFollowingProfile();\r\n    }\r\n  }, [user.username, profileUserId]);\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\r\n        <div className=\"container flex justify-center pr-16\">\r\n          {user.username && (\r\n            <img\r\n              className=\"rounded-full h-24 w-24 md:h-40 md:w-40 flex border-4 border-red-primary p-1\"\r\n              alt={`${profileUsername} profile picture`}\r\n              src={`/images/avatars/${profileUsername}.jpg`}\r\n              onError={(e) => {\r\n                e.target.src = `/images/avatars/default.png`;\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nHeader.propTypes = {\r\n  photosCount: PropTypes.number.isRequired,\r\n  followerCount: PropTypes.number.isRequired,\r\n  setFollowerCount: PropTypes.number.isRequired,\r\n  profile: PropTypes.shape({\r\n    docId: PropTypes.string,\r\n    userId: PropTypes.string,\r\n    following: PropTypes.array,\r\n    followers: PropTypes.array,\r\n    fullName: PropTypes.string,\r\n    username: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}