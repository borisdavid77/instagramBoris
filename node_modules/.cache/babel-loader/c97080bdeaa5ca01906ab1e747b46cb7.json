{"ast":null,"code":"var _jsxFileName = \"D:\\\\CURSO JS\\\\REACT\\\\instagram\\\\src\\\\components\\\\sidebar\\\\suggestions.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-unreachable */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Suggestions(_ref) {\n  _s();\n\n  let {\n    userId\n  } = _ref;\n  const [profiles, setProfiles] = useState(null); // go a head and get the suggested protoFiles\n\n  useEffect(() => {\n    async function suggestionsProfiles() {\n      const response = await Promise;\n    }\n  }, [userId]); // hint: use the firebase service (call using userId)\n  // getSuggestedProfiles\n  // call the async function ^^^^ within useEffect\n  // store it in state\n  // go ahead and render (wait on the profiles as in 'skeleton')\n\n  return !profiles ? /*#__PURE__*/_jsxDEV(Skeleton, {\n    count: 1,\n    height: 150,\n    className: \"mt-5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this) : profiles.length > 0( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm flex items-center align-items justify-between mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-gray-base\",\n        children: \"Seggestions for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this));\n  null;\n}\n\n_s(Suggestions, \"qxjxnT9amCcb9SFSsQkfAAyVGGQ=\");\n\n_c = Suggestions;\nSuggestions.prototypes = {\n  userId: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"sources":["D:/CURSO JS/REACT/instagram/src/components/sidebar/suggestions.js"],"names":["React","useState","useEffect","PropTypes","Skeleton","Suggestions","userId","profiles","setProfiles","suggestionsProfiles","response","Promise","length","prototypes","string"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,eAAe,SAASC,WAAT,OAAiC;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC,CAD8C,CAG9C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,mBAAf,GAAqC;AACnC,YAAMC,QAAQ,GAAG,MAAMC,OAAvB;AACD;AACF,GAJQ,EAIN,CAACL,MAAD,CAJM,CAAT,CAJ8C,CAS9C;AACA;AACA;AACA;AACA;;AAEA,SAAO,CAACC,QAAD,gBACL,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAoB,IAAA,MAAM,EAAE,GAA5B;AAAiC,IAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,UADK,GAGLA,QAAQ,CAACK,MAAT,GACE,gBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAJJ;AAYA;AACD;;GA5BuBP,W;;KAAAA,W;AA6BxBA,WAAW,CAACQ,UAAZ,GAAyB;AACvBP,EAAAA,MAAM,EAAEH,SAAS,CAACW;AADK,CAAzB","sourcesContent":["/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-unreachable */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport default function Suggestions({ userId }) {\r\n  const [profiles, setProfiles] = useState(null);\r\n\r\n  // go a head and get the suggested protoFiles\r\n  useEffect(() => {\r\n    async function suggestionsProfiles() {\r\n      const response = await Promise;\r\n    }\r\n  }, [userId]);\r\n  // hint: use the firebase service (call using userId)\r\n  // getSuggestedProfiles\r\n  // call the async function ^^^^ within useEffect\r\n  // store it in state\r\n  // go ahead and render (wait on the profiles as in 'skeleton')\r\n\r\n  return !profiles ? (\r\n    <Skeleton count={1} height={150} className=\"mt-5\" />\r\n  ) : (\r\n    profiles.length >\r\n      0(\r\n        <div className=\"rounded flex flex-col\">\r\n          <div className=\"text-sm flex items-center align-items justify-between mb-2\">\r\n            <p className=\"font-bold text-gray-base\">Seggestions for you</p>\r\n          </div>\r\n        </div>\r\n      )\r\n  );\r\n  null;\r\n}\r\nSuggestions.prototypes = {\r\n  userId: PropTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}